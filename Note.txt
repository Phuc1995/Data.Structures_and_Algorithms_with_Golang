Lists:
    - A list is a collection of ordered elements that are used to store list of items. Unlike array lists, these can expand and shrink dynamically

LinkedList:
    - LinkedList is a sequence of nodes that have properties and a reference to the next node in the sequence. It is a linear data structure that is used to store
     data. The data structure permits the addition and deletion of components
     from any node next to another node. They are not stored contiguously in
     memory, which makes them different arrays.
    - Losing the head node in the singly linked list means losing access to your linkedlist. When I say “never lose the address of head node”, it means you have to be careful while storing it in global variables and prevent replacing it or watch out for variable scopes in local variables.
 
Set:
	- A Set is a linear data structure that has a collection of values that are not repeated. A set can store unique values without any particular order. In the real world, sets can be used to collect all tags for blog posts and conversation participants in a chat. The data can be of Boolean, integer,float, characters, and other types. Static sets allow only query operations,
which means operations related to querying the elements. Dynamic and mutable sets allow for the insertion and deletion of elements. Algebraic operations such as union, intersection, difference, and subset can be defined on the sets. The following example shows the Set integer with a map integer key and bool as a value:

Queues:
	- A queue consists of elements to be processed in a particular order or based on priority
	- A queue is a linear data structure and a sequential collection

 Sorting algorithms are classified by the following criteria:
	+ Computational complexity
	+ Memory usage
	+ Stability
	+ Type of sorting: serial/parallel
	+ Adaptability
	+ Method of sorting

bubble(noi bot): The bubble sort algorithm is a sorting algorithm that compares a pair of neighboring elements and swaps them if they are in the wrong order. The algorithm has a complexity of O(n ), where n is the number of elements to be sorted. The smallest or greatest value bubbles up to the top of the collection, or the smallest or greatest sinks to the bottom (depending on whether you're sorting into ascending or descending order).

+ Sắp xếp nổi bọt là một giải thuật sắp xếp đơn giản. Giải thuật sắp xếp này được tiến hành dựa trên việc so sánh cặp phần tử liền kề nhau và tráo đổi thứ tự nếu chúng không theo thứ tự.
Giải thuật này không thích hợp sử dụng với các tập dữ liệu lớn khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là Ο(n2) với n là số phần tử.
Giải thuật sắp xếp nổi bọt là giải thuật chậm nhất trong số các giải thuật sắp xếp cơ bản. Giải thuật này còn chậm hơn giải thuật đổi chỗ trực tiếp mặc dù số lần so sánh bằng nhau, nhưng do đổi chỗ hai phần tử kề nhau nên số lần đổi chỗ nhiều hơn















